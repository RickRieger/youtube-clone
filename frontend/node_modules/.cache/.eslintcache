[{"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/components/Comments/Comments.jsx":"1","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/components/Comments/Comment.jsx":"2","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/pages/SelectedVideo/SelectedVideo.jsx":"3","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/components/NavBar/NavBar.jsx":"4","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/pages/HomePage/HomePage.js":"5","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/components/Video/Video.jsx":"6","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/pages/SuggestedVideos/SuggestedVideos.jsx":"7","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/index.js":"8","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/context/AuthContext.js":"9","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/App.js":"10","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/utils/PrivateRoute.js":"11","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/pages/LoginPage/LoginPage.js":"12","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/pages/RegisterPage/RegisterPage.js":"13","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/components/Footer/Footer.jsx":"14","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/hooks/useAuth.js":"15","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/hooks/useCustomForm.js":"16","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/components/Sidebar/Sidebar.jsx":"17","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/components/Sidebar/SideBarRow.jsx":"18"},{"size":3230,"mtime":1650528386544,"results":"19","hashOfConfig":"20"},{"size":4704,"mtime":1650531631413,"results":"21","hashOfConfig":"20"},{"size":4320,"mtime":1650516944790,"results":"22","hashOfConfig":"20"},{"size":2537,"mtime":1650512559575,"results":"23","hashOfConfig":"20"},{"size":761,"mtime":1650512995647,"results":"24","hashOfConfig":"20"},{"size":1057,"mtime":1650514536501,"results":"25","hashOfConfig":"20"},{"size":2532,"mtime":1650516837096,"results":"26","hashOfConfig":"20"},{"size":385,"mtime":1649875685532,"results":"27","hashOfConfig":"20"},{"size":2520,"mtime":1649875685531,"results":"28","hashOfConfig":"20"},{"size":1081,"mtime":1650382902627,"results":"29","hashOfConfig":"20"},{"size":287,"mtime":1649875685533,"results":"30","hashOfConfig":"20"},{"size":1380,"mtime":1649875685533,"results":"31","hashOfConfig":"20"},{"size":1910,"mtime":1649875685533,"results":"32","hashOfConfig":"20"},{"size":164,"mtime":1650307608237,"results":"33","hashOfConfig":"20"},{"size":214,"mtime":1650402724533,"results":"34","hashOfConfig":"20"},{"size":662,"mtime":1649875685532,"results":"35","hashOfConfig":"20"},{"size":1319,"mtime":1650131119769,"results":"36","hashOfConfig":"20"},{"size":323,"mtime":1650129689127,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},"ichdlt",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/components/Comments/Comments.jsx",["100","101","102","103"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\nimport './Comments.css';\nimport Comment from './Comment';\nimport Box from '@mui/material/Box';\nimport Input from '@mui/material/Input';\nimport { Button } from '@mui/material';\nconst ariaLabel = { 'aria-label': 'description' };\nconst Comments = (props) => {\n  const params = useParams();\n\n  const auth = useAuth();\n  const [user, token] = auth;\n\n  const [comments, setComments] = useState([]);\n  const [userComment, setUserComment] = useState([]);\n\n  useEffect(() => {\n    getAllComments();\n  }, [props.videoId]);\n\n  async function getAllComments() {\n    try {\n      let response = await axios.get(\n        `http://127.0.0.1:8000/api/comments/${props.videoId}/`,\n        {\n          headers: {\n            Authorization: 'Bearer ' + token,\n          },\n        }\n      );\n      setComments(response.data);\n    } catch (e) {\n      console.log(e.message);\n    }\n  }\n\n  const postComment = async (callBack) => {\n    let body = {\n      video: props.videoId,\n      text: userComment,\n    };\n    try {\n      let response = await axios.post(\n        `http://127.0.0.1:8000/api/comments/`,\n        body,\n        {\n          headers: {\n            Authorization: 'Bearer ' + token,\n          },\n        }\n      );\n      callBack();\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n\n  const onSuccess = () => {\n    setUserComment('');\n    getAllComments();\n  };\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (userComment.length === 0) {\n      alert('cant be empty');\n      return;\n    }\n    postComment(onSuccess);\n  }\n\n  return (\n    <div className='container-comments'>\n      <Box\n        component='form'\n        sx={{\n          '& > :not(style)': { m: 1 },\n          marginTop: '40px',\n          marginBottom: '40px',\n        }}\n        noValidate\n        autoComplete='off'\n      >\n        <Input\n          placeholder='Add a comment...'\n          inputProps={ariaLabel}\n          sx={{\n            color: 'white',\n            border: 'white',\n            width: '80%',\n          }}\n          type='text'\n          value={userComment}\n          onChange={(e) => setUserComment(e.target.value)}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              handleSubmit(e);\n            }\n          }}\n        />\n        <Button variant='text'>CANCEL</Button>\n        <Button\n          variant='outlined'\n          onClick={(e) => {\n            handleSubmit(e);\n          }}\n        >\n          COMMENT\n        </Button>\n      </Box>\n      <div className='comments'>\n        {comments\n          .slice(0)\n          .reverse()\n          .map((comment, index) => {\n            return (\n              <Comment\n                key={index}\n                comment={comment.text}\n                commentId={comment.id}\n                userId={comment.user_id}\n                username={comment.username}\n                likes={comment.likes}\n                dislikes={comment.dislikes}\n                created={comment.created}\n              />\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default Comments;\n",["104","105"],"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/components/Comments/Comment.jsx",["106","107","108","109","110","111"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport useAuth from '../../hooks/useAuth';\nimport moment from 'moment';\nimport './Comments.css';\nimport { Button } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport Input from '@mui/material/Input';\nimport ThumbUpOutlinedIcon from '@mui/icons-material/ThumbUpOutlined';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport ThumbDownAltOutlinedIcon from '@mui/icons-material/ThumbDownAltOutlined';\nimport ThumbDownAltIcon from '@mui/icons-material/ThumbDownAlt';\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\n//NOTES: Attempted to use the axios requests to get the replies and map them inside this component. I was\n//getting some errors with the axios.post call but the axios.get seems to working fine.\n\nfunction Comment(props) {\n  useEffect(() => {\n    getAllRelplies();\n  }, []);\n  const auth = useAuth();\n  const [user, token] = auth;\n  const { comment, commentId, userId, likes, dislikes, username, created } =\n    props;\n  const [replies, setReplies] = useState([]);\n  const [reply, setReply] = useState('');\n  const [replyBool, setReplyBool] = useState(false);\n  const [showReplyBool, setShowReplyBool] = useState(false);\n\n  const getAllRelplies = async () => {\n    try {\n      let response = await axios.get(\n        `http://127.0.0.1:8000/api/replies/${commentId}/`,\n        {\n          headers: {\n            Authorization: 'Bearer ' + token,\n          },\n        }\n      );\n      setReplies(response.data);\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n\n  async function postReply() {\n    let body = {\n      text: reply,\n    };\n    try {\n      let response = await axios.post(\n        `http://127.0.0.1:8000/api/replies/${commentId}/`,\n        body,\n        {\n          headers: {\n            Authorization: 'Bearer ' + token,\n          },\n        }\n      );\n      getAllRelplies();\n      setReply('');\n    } catch (e) {\n      console.log(e.message);\n    }\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (reply.length === 0) {\n      e.preventDefault();\n      alert('cant be empty');\n      return;\n    }\n\n    postReply(reply);\n    setReply('');\n  }\n  console.log(replies);\n  return (\n    <div>\n      <div className='comment-header-container'>\n        <div className='username-text'>{username}</div>\n        <div className='date-text'>\n          {moment(created).startOf('hour').fromNow()}\n        </div>\n      </div>\n      <h3 style={{ marginBottom: '20px' }}> {comment} </h3>\n      <ThumbUpOutlinedIcon />\n      <span style={{ marginLeft: '10px', verticalAlign: 'super' }}>\n        {likes}\n      </span>\n      <ThumbDownAltOutlinedIcon style={{ marginLeft: '20px' }} />\n      <span\n        style={{\n          marginLeft: '10px',\n          verticalAlign: 'super',\n          marginRight: '20px',\n        }}\n      >\n        {dislikes}\n      </span>\n      <Button variant='text' onClick={() => setReplyBool(true)}>\n        Reply\n      </Button>\n      <Box\n        component='form'\n        sx={{\n          '& > :not(style)': { m: 1 },\n          marginTop: '40px',\n          display: replyBool ? 'block' : 'none',\n          right: '0px',\n        }}\n        noValidate\n        autoComplete='off'\n      >\n        <Input\n          placeholder='Add a reply...'\n          // inputProps={ariaLabel}\n          sx={{\n            color: 'white',\n            border: 'white',\n            width: '60%',\n          }}\n          type='text'\n          value={reply}\n          onChange={(e) => setReply(e.target.value)}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              handleSubmit(e);\n            }\n          }}\n        />\n        <Button variant='text' onClick={() => setReplyBool(false)}>\n          CANCEL\n        </Button>\n        <Button\n          variant='outlined'\n          onClick={(e) => {\n            handleSubmit(e);\n          }}\n        >\n          REPLY\n        </Button>\n      </Box>\n      <div className='reply-container'>\n        {showReplyBool ? (\n          <ArrowDropUpIcon onClick={() => setShowReplyBool(false)} />\n        ) : (\n          <ArrowDropDownIcon onClick={() => setShowReplyBool(true)} />\n        )}\n        {showReplyBool ? (\n          <span>Hide 6 replies </span>\n        ) : (\n          <span>Show 6 replies </span>\n        )}\n\n        {showReplyBool ? (\n          <div className='replies'>\n            {replies.reverse().map((reply, index) => {\n              return <div key={index}>{reply.text}</div>;\n            })}\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Comment;\n","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/pages/SelectedVideo/SelectedVideo.jsx",["112","113"],[],"import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './SelectedVideo.css';\nimport Video from '../../components/Video/Video';\nimport Comments from '../../components/Comments/Comments';\nimport moment from 'moment';\n\nfunction SelectedVideo() {\n  const params = useParams();\n  const navigate = useNavigate();\n  const [videoInfo, setVideoInfo] = useState(null);\n  const [relatedVideos, setRelatedVideos] = useState(null);\n\n  useEffect(() => {\n    getVideoInfoByID();\n    getRelatedVideos();\n    window.scrollTo(0, 0);\n  }, [params.videoId]);\n\n  const getRelatedVideos = async () => {\n    try {\n      let result = await axios.get(\n        `https://youtube.googleapis.com/youtube/v3/search?part=snippet&relatedToVideoId=${params.videoId}&type=video&key=${process.env.REACT_APP_API_KEY}`\n      );\n      console.log(result);\n      setRelatedVideos(result.data.items);\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n\n  const getVideoInfoByID = async () => {\n    console.log(\n      `https://youtube.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&id=${params.videoId}&key=${process.env.REACT_APP_API_KEY}`\n    );\n    try {\n      let result = await axios.get(\n        `https://youtube.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&id=${params.videoId}&key=${process.env.REACT_APP_API_KEY}`\n      );\n\n      setVideoInfo(result.data.items[0]);\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n  const handleOnClick = (videoId) => {\n    navigate(`/selected-video/${videoId}`);\n    console.log(videoId);\n  };\n  function abbreviateNumber(value) {\n    let newValue = value;\n    const suffixes = ['', 'K', 'M', 'B', 'T'];\n    let suffixNum = 0;\n    while (newValue >= 1000) {\n      newValue /= 1000;\n      suffixNum++;\n    }\n\n    newValue = newValue.toPrecision(3);\n\n    newValue += suffixes[suffixNum];\n    return newValue;\n  }\n  console.log(videoInfo);\n  console.log(relatedVideos);\n  if (!relatedVideos) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <>\n        <div className='video-responsive'>\n          <iframe\n            src={`https://www.youtube.com/embed/${params.videoId}`}\n            frameBorder='0'\n            allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture'\n            allowFullScreen\n            title='Embedded youtube'\n          />\n        </div>\n        <div className='bottom-container'>\n          <div className='comment-section'>\n            <div className='comment-row-one'>\n              <h2>{videoInfo.snippet.title}</h2>\n            </div>\n            <div className='comment-row-two'>\n              {abbreviateNumber(videoInfo.statistics.viewCount)} views ·{' '}\n              {moment(videoInfo.snippet.publishedAt).format('ll')}\n            </div>\n            <hr />\n            <div className='description'>{videoInfo.snippet.description}</div>\n            <hr />\n            <Comments videoId={params.videoId} />\n          </div>\n          <div className='related-videos'>\n            {relatedVideos\n              .filter((video) => {\n                if ('snippet' in video) {\n                  return true;\n                }\n              })\n              .map((video, index) => {\n                return (\n                  <Video\n                    key={index}\n                    image={\n                      video.snippet.thumbnails.high.url &&\n                      video.snippet.thumbnails.high.url\n                    }\n                    title={video.snippet.title && video.snippet.title}\n                    channel={\n                      video.snippet.channelTitle && video.snippet.channelTitle\n                    }\n                    // views={video.snippet.viewCount ? video.snippet.viewCount : ''}\n                    video_id={video.id.videoId && video.id.videoId}\n                    uploadDate={\n                      video.snippet.publishedAt && video.snippet.publishedAt\n                    }\n                    onClick={() => handleOnClick(video.id.videoId)}\n                    suggest={false}\n                  />\n                );\n              })}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default SelectedVideo;\n","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/components/NavBar/NavBar.jsx",["114","115"],[],"import React from 'react';\nimport { useContext, useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport AuthContext from '../../context/AuthContext';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport VideoCallOutlinedIcon from '@material-ui/icons/VideoCallOutlined';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport Avatar from '@material-ui/core/Avatar';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\n\nimport './NavBar.css';\n\nconst Navbar = () => {\n  const { logoutUser, user } = useContext(AuthContext);\n  const [query, setQuery] = useState('');\n\n  const navigate = useNavigate();\n\n  const handleSearchQuery = () => {\n    if (query.length === 0) {\n      alert('please enter a proper search query!');\n      return;\n    }\n    navigate(`/${query}`);\n    setQuery('');\n  };\n\n  return (\n    <div className='navBar'>\n      <ul>\n        <li className='brand'>\n          <Link to='/' style={{ textDecoration: 'none', color: 'white' }}>\n            <MenuIcon />\n          </Link>\n          <img\n            className='logo-img'\n            src='https://upload.wikimedia.org/wikipedia/commons/a/af/Youtube.png'\n            alt='youtube image'\n          />\n        </li>\n\n        <li className='center-nav-cluster'>\n          <input\n            type='text'\n            value={query}\n            className='search-field'\n            placeholder='Search'\n            onChange={(e) => setQuery(e.target.value)}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                handleSearchQuery();\n              }\n            }}\n          />\n          <SearchIcon className='search-button' onClick={handleSearchQuery} />\n        </li>\n        <li className='right-nav-cluster'>\n          {user ? (\n            <div>\n              <VideoCallOutlinedIcon className='header_icons' />{' '}\n              <AppsIcon className='header_icons' />{' '}\n              <NotificationsIcon className='header_icons' />{' '}\n            </div>\n          ) : (\n            <div>\n              {' '}\n              <AppsIcon /> <MoreVertIcon />\n            </div>\n          )}\n\n          {user ? (\n            <Avatar onClick={logoutUser} />\n          ) : (\n            <button onClick={() => navigate('/login')}>Sign In</button>\n          )}\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Navbar;\n","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/pages/HomePage/HomePage.js",["116","117"],[],"import React from 'react';\nimport Sidebar from '../../components/Sidebar/Sidebar';\nimport SuggestedVideos from '../SuggestedVideos/SuggestedVideos';\nimport useAuth from '../../hooks/useAuth';\nimport './Home.css';\n\nconst HomePage = () => {\n  // The \"user\" value from this Hook contains the decoded logged in user information (username, first name, id)\n  // The \"token\" value is the JWT token that you will send in the header of any request requiring authentication\n  const [user, token] = useAuth();\n\n  return (\n    <div className='container'>\n      {/* <h1 style={{color:'white'}}>Home Page for {user.username}!</h1> */}\n      <div className='app__page'>\n        <Sidebar />\n        <SuggestedVideos />\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/components/Video/Video.jsx",["118"],[],"import React from 'react';\nimport moment from 'moment';\nimport './Video.css';\nimport { useNavigate } from 'react-router-dom';\n\nconst Video = (props) => {\n  const navigate = useNavigate();\n  const handleOnClick = (videoId) => {\n    navigate(`/selected-video/${videoId}`);\n  };\n  return (\n    <div\n      className={props.suggest ? 'videoContainer' : 'videoContainer-suggested'}\n      onClick={() => handleOnClick(props.video_id)}\n    >\n      <img\n        className='videoThumbnail'\n        src={props.image}\n        alt='No image available'\n      ></img>\n      <div className='videoContainerInfo'>\n        <div className='videoContainerText'>\n          <p className='videoTitleText'>{props.title}</p>\n          <p className='videoViewsText'>\n            {' '}\n            {props.channel}\n            <br></br> {props.views ? 'views:' : ''} {props.views}{' '}\n            {props.views ? '·' : 'Uploaded'}{' '}\n            {moment(props.uploadDate).startOf('day').fromNow()}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Video;\n","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/pages/SuggestedVideos/SuggestedVideos.jsx",["119","120"],[],"import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './SuggestedVideos.css';\nimport Video from '../../components/Video/Video';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nfunction SuggestedVideos() {\n  const navigate = useNavigate();\n  const params = useParams();\n  const [videos, setVideos] = useState([]);\n\n  useEffect(() => {\n    if (params.query) {\n      handleSearch();\n    } else {\n      getAllPopularVideos();\n    }\n  }, [params.query]);\n\n  const getAllPopularVideos = async () => {\n    try {\n      let result = await axios.get(\n        `https://youtube.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&chart=mostPopular&maxResults=20&regionCode=US&key=${process.env.REACT_APP_API_KEY}`\n      );\n\n      setVideos(result.data.items);\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n\n  const handleSearch = async () => {\n    try {\n      let result = await axios.get(\n        `https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=25&q=${params.query}&key=${process.env.REACT_APP_API_KEY}`\n      );\n\n      setVideos(result.data.items);\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n\n  function abbreviateNumber(value) {\n    let newValue = value;\n    const suffixes = ['', 'K', 'M', 'B', 'T'];\n    let suffixNum = 0;\n    while (newValue >= 1000) {\n      newValue /= 1000;\n      suffixNum++;\n    }\n\n    newValue = newValue.toPrecision(3);\n\n    newValue += suffixes[suffixNum];\n    return newValue;\n  }\n  console.log(abbreviateNumber);\n  console.log(videos);\n  if (!videos) {\n    return <div>'loading...'</div>;\n  } else {\n    return (\n      <div className='suggested__videos'>\n        <div className='suggestedVideos_videos'>\n          {videos.map((video, index) => {\n            return (\n              <Video\n                key={index}\n                image={video.snippet.thumbnails.high.url}\n                title={video.snippet.title}\n                channel={video.snippet.channelTitle}\n                views={\n                  video.statistics\n                    ? abbreviateNumber(video.statistics.viewCount)\n                    : ''\n                }\n                video_id={video.id.videoId ? video.id.videoId : video.id}\n                uploadDate={video.snippet.publishedAt}\n                suggest={true}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SuggestedVideos;\n// video.snippet.thumbnails.high\n","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/index.js",[],[],"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/context/AuthContext.js",[],[],"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/App.js",["121"],[],"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/utils/PrivateRoute.js",[],[],"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/pages/LoginPage/LoginPage.js",["122"],[],"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/pages/RegisterPage/RegisterPage.js",[],[],"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/components/Footer/Footer.jsx",[],[],"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/hooks/useAuth.js",[],[],"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/hooks/useCustomForm.js",[],[],"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/components/Sidebar/Sidebar.jsx",[],[],"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/components/Sidebar/SideBarRow.jsx",[],[],{"ruleId":"123","severity":1,"message":"124","line":12,"column":9,"nodeType":"125","messageId":"126","endLine":12,"endColumn":15},{"ruleId":"123","severity":1,"message":"127","line":15,"column":10,"nodeType":"125","messageId":"126","endLine":15,"endColumn":14},{"ruleId":"128","severity":1,"message":"129","line":22,"column":6,"nodeType":"130","endLine":22,"endColumn":21,"suggestions":"131"},{"ruleId":"123","severity":1,"message":"132","line":46,"column":11,"nodeType":"125","messageId":"126","endLine":46,"endColumn":19},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"123","severity":1,"message":"137","line":10,"column":8,"nodeType":"125","messageId":"126","endLine":10,"endColumn":19},{"ruleId":"123","severity":1,"message":"138","line":12,"column":8,"nodeType":"125","messageId":"126","endLine":12,"endColumn":24},{"ruleId":"128","severity":1,"message":"139","line":21,"column":6,"nodeType":"130","endLine":21,"endColumn":8,"suggestions":"140"},{"ruleId":"123","severity":1,"message":"127","line":23,"column":10,"nodeType":"125","messageId":"126","endLine":23,"endColumn":14},{"ruleId":"123","severity":1,"message":"141","line":24,"column":31,"nodeType":"125","messageId":"126","endLine":24,"endColumn":37},{"ruleId":"123","severity":1,"message":"132","line":52,"column":11,"nodeType":"125","messageId":"126","endLine":52,"endColumn":19},{"ruleId":"128","severity":1,"message":"142","line":19,"column":6,"nodeType":"130","endLine":19,"endColumn":22,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":97,"column":31,"nodeType":"146","messageId":"147","endLine":97,"endColumn":33},{"ruleId":"123","severity":1,"message":"148","line":12,"column":8,"nodeType":"125","messageId":"126","endLine":12,"endColumn":25},{"ruleId":"149","severity":1,"message":"150","line":38,"column":11,"nodeType":"151","endLine":42,"endColumn":13},{"ruleId":"123","severity":1,"message":"127","line":10,"column":10,"nodeType":"125","messageId":"126","endLine":10,"endColumn":14},{"ruleId":"123","severity":1,"message":"152","line":10,"column":16,"nodeType":"125","messageId":"126","endLine":10,"endColumn":21},{"ruleId":"149","severity":1,"message":"150","line":16,"column":7,"nodeType":"151","endLine":20,"endColumn":8},{"ruleId":"123","severity":1,"message":"153","line":9,"column":9,"nodeType":"125","messageId":"126","endLine":9,"endColumn":17},{"ruleId":"128","severity":1,"message":"154","line":19,"column":6,"nodeType":"130","endLine":19,"endColumn":20,"suggestions":"155"},{"ruleId":"123","severity":1,"message":"156","line":15,"column":8,"nodeType":"125","messageId":"126","endLine":15,"endColumn":20},{"ruleId":"128","severity":1,"message":"157","line":19,"column":6,"nodeType":"130","endLine":19,"endColumn":21,"suggestions":"158"},"no-unused-vars","'params' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllComments'. Either include it or remove the dependency array.","ArrayExpression",["159"],"'response' is assigned a value but never used.","no-native-reassign",["160"],"no-negated-in-lhs",["161"],"'ThumbUpIcon' is defined but never used.","'ThumbDownAltIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllRelplies'. Either include it or remove the dependency array.",["162"],"'userId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getRelatedVideos' and 'getVideoInfoByID'. Either include them or remove the dependency array.",["163"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'PersonOutlineIcon' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'token' is assigned a value but never used.","'navigate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleSearch'. Either include it or remove the dependency array.",["164"],"'PrivateRoute' is defined but never used.","React Hook useEffect has a missing dependency: 'reset'. Either include it or remove the dependency array.",["165"],{"desc":"166","fix":"167"},"no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},"Update the dependencies array to be: [getAllComments, props.videoId]",{"range":"176","text":"177"},"Update the dependencies array to be: [getAllRelplies]",{"range":"178","text":"179"},"Update the dependencies array to be: [getRelatedVideos, getVideoInfoByID, params.videoId]",{"range":"180","text":"181"},"Update the dependencies array to be: [handleSearch, params.query]",{"range":"182","text":"183"},"Update the dependencies array to be: [isServerError, reset]",{"range":"184","text":"185"},[663,678],"[getAllComments, props.videoId]",[964,966],"[getAllRelplies]",[611,627],"[getRelatedVideos, getVideoInfoByID, params.videoId]",[513,527],"[handleSearch, params.query]",[562,577],"[isServerError, reset]"]