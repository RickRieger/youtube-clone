[{"/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/index.js":"1","/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/App.js":"2","/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/context/AuthContext.js":"3","/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/utils/PrivateRoute.js":"4","/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/pages/HomePage/HomePage.js":"5","/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/pages/RegisterPage/RegisterPage.js":"6","/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/pages/LoginPage/LoginPage.js":"7","/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/pages/SelectedVideo/SelectedVideo.jsx":"8","/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/components/NavBar/NavBar.jsx":"9","/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/components/Footer/Footer.jsx":"10","/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/hooks/useCustomForm.js":"11","/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/hooks/useAuth.js":"12","/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/components/Sidebar/Sidebar.jsx":"13","/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/pages/SuggestedVideos/SuggestedVideos.jsx":"14","/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/components/Comments/Comments.jsx":"15","/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/components/Video/Video.jsx":"16","/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/components/Sidebar/SideBarRow.jsx":"17","/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/components/Comments/Comment.jsx":"18"},{"size":385,"mtime":1650389786926,"results":"19","hashOfConfig":"20"},{"size":1081,"mtime":1650389786925,"results":"21","hashOfConfig":"20"},{"size":2520,"mtime":1650389786926,"results":"22","hashOfConfig":"20"},{"size":287,"mtime":1650389786927,"results":"23","hashOfConfig":"20"},{"size":1400,"mtime":1650389786926,"results":"24","hashOfConfig":"20"},{"size":1910,"mtime":1650389786927,"results":"25","hashOfConfig":"20"},{"size":1380,"mtime":1650389786927,"results":"26","hashOfConfig":"20"},{"size":4022,"mtime":1650479061905,"results":"27","hashOfConfig":"20"},{"size":2695,"mtime":1650389786925,"results":"28","hashOfConfig":"20"},{"size":164,"mtime":1650389786925,"results":"29","hashOfConfig":"20"},{"size":662,"mtime":1650389786926,"results":"30","hashOfConfig":"20"},{"size":214,"mtime":1650389786926,"results":"31","hashOfConfig":"20"},{"size":1319,"mtime":1650389786926,"results":"32","hashOfConfig":"20"},{"size":2127,"mtime":1650479061906,"results":"33","hashOfConfig":"20"},{"size":3611,"mtime":1650496336065,"results":"34","hashOfConfig":"20"},{"size":987,"mtime":1650479061905,"results":"35","hashOfConfig":"20"},{"size":323,"mtime":1650389786925,"results":"36","hashOfConfig":"20"},{"size":3101,"mtime":1650507599886,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"t9lep4",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},"/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/index.js",[],[],"/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/App.js",["95"],[],"/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/context/AuthContext.js",[],[],"/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/utils/PrivateRoute.js",[],[],"/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/pages/HomePage/HomePage.js",["96","97"],[],"/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/pages/RegisterPage/RegisterPage.js",[],[],"/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/pages/LoginPage/LoginPage.js",["98"],[],"/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/pages/SelectedVideo/SelectedVideo.jsx",["99","100"],[],"/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/components/NavBar/NavBar.jsx",["101","102"],[],"/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/components/Footer/Footer.jsx",[],[],"/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/hooks/useCustomForm.js",[],[],"/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/hooks/useAuth.js",[],[],"/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/components/Sidebar/Sidebar.jsx",[],[],"/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/pages/SuggestedVideos/SuggestedVideos.jsx",["103","104"],[],"/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/components/Comments/Comments.jsx",["105","106","107"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\nimport './Comments.css';\nimport Comment from './Comment';\nimport Box from '@mui/material/Box';\nimport Input from '@mui/material/Input';\nimport { Button } from '@mui/material';\nconst ariaLabel = { 'aria-label': 'description' };\nconst Comments = (props) => {\n  const params = useParams();\n\n  const auth = useAuth();\n  const [user, token] = auth;\n\n  const [comments, setComments] = useState([]);\n  const [userComment, setUserComment] = useState([]);\n  const [updatePage, setUpdatePage] = useState(false);\n\n  useEffect(() => {\n    getAllComments();\n    setUpdatePage(false);\n  }, [updatePage, props.videoId]);\n\n  async function getAllComments() {\n    try {\n      let response = await axios.get(\n        `http://127.0.0.1:8000/api/comments/${props.videoId}/`,\n        {\n          headers: {\n            Authorization: 'Bearer ' + token,\n          },\n        }\n      );\n      setComments(response.data);\n    } catch (e) {\n      console.log(e.message);\n    }\n  }\n\n  async function postComment() {\n    let body = {\n      video: props.videoId,\n      text: userComment,\n    };\n    try {\n      let response = axios.post(`http://127.0.0.1:8000/api/comments/`, body, {\n        headers: {\n          Authorization: 'Bearer ' + token,\n        },\n      });\n      setUpdatePage(true);\n    } catch (e) {\n      console.log(e.message);\n    }\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (userComment.length === 0) {\n      e.preventDefault();\n      alert('cant be empty');\n      return;\n    }\n\n    postComment(userComment);\n    setUserComment('');\n  }\n\n  console.log('comments===========>', comments);\n\n  return (\n    <div className='fun'>\n      <Box\n        component='form'\n        sx={{\n          '& > :not(style)': { m: 1 },\n          marginTop: '40px',\n        }}\n        noValidate\n        autoComplete='off'\n      >\n        <Input\n          placeholder='Add a comment...'\n          inputProps={ariaLabel}\n          sx={{\n            color: 'white',\n            border: 'white',\n            width: '80%',\n          }}\n          type='text'\n          value={userComment}\n          onChange={(e) => setUserComment(e.target.value)}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              handleSubmit(e);\n            }\n          }}\n        />\n        <Button variant='text'>CANCEL</Button>\n        <Button\n          variant='outlined'\n          onClick={(e) => {\n            handleSubmit(e);\n          }}\n        >\n          COMMENT\n        </Button>\n        <Comment videoId={params.videoId} />\n      </Box>\n      {/* <input\n        type='text'\n        value={userComment}\n        className='search-field'\n        placeholder='Comment...'\n        onChange={(e) => setUserComment(e.target.value)}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter') {\n            handleSubmit();\n          }\n        }}\n      /> */}\n\n      <div className='comments'>\n        {comments.slice(0).reverse().map((comment, index) => {\n          console.log('============well then===========');\n          return (\n            <Comment\n              key={index}\n              comment={comment.text}\n              commentId={comment.id}\n              userId={comment.user_id}\n              username={comment.username}\n              likes={comment.likes}\n              dislikes={comment.dislikes}\n              created={comment.created}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Comments;\n",["108","109"],"/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/components/Video/Video.jsx",["110"],[],"/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/components/Sidebar/SideBarRow.jsx",[],[],"/Users/RexSheikh/Desktop/youtube-clone 5.14.47 PM/frontend/src/components/Comments/Comment.jsx",["111","112","113","114","115","116"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport useAuth from '../../hooks/useAuth';\nimport moment from 'moment';\nimport \"./Comments.css\"\nimport { Button } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport Input from '@mui/material/Input';\n\n//NOTES: Attempted to use the axios requests to get the replies and map them inside this component. I was \n//getting some errors with the axios.post call but the axios.get seems to working fine. \n\nfunction Comment(props) {\n  useEffect(() => {\n    getAllRelplies();\n  }, []);\n  const auth = useAuth();\n  const [user, token] = auth;\n  const { comment, commentId, userId, likes, dislikes, username, created } =\n    props;\n  const [replies, setReplies] = useState([]);\n  const [reply, setReply] = useState('');\n\n  const getAllRelplies = async () => {\n    try {\n      let response = await axios.get(\n        `http://127.0.0.1:8000/api/replies/${commentId}/`,\n        {\n          headers: {\n            Authorization: 'Bearer ' + token,\n          },\n        }\n      );\n      setReplies(response.data);\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n\n  async function postReply() {\n    let body = {\n      reply : reply,\n    };\n    try {\n      let response = axios.post(`http://127.0.0.1:8000/api/replies/${commentId}/`, body, {\n        headers: {\n          Authorization: 'Bearer ' + token,\n        },\n      });\n    } catch (e) {\n      console.log(e.message);\n    }\n  }\n\n\n\n  console.log(replies);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (reply.length === 0) {\n      e.preventDefault();\n      alert('cant be empty');\n      return;\n    }\n\n    postReply(reply);\n    setReply('');\n  }\n\n  return (\n    <div>\n        <div className=\"comment-header-container\"> \n          <div className=\"username-text\">\n            {username} \n          </div>\n          <div className=\"date-text\">\n            {moment(created).startOf('hour').fromNow()}\n          </div>\n        </div>\n      <h3> {comment} </h3>\n      <Box\n        component='form'\n        sx={{\n          '& > :not(style)': { m: 1 },\n          marginTop: '40px',\n        }}\n        noValidate\n        autoComplete='off'\n      >\n        <Input\n          placeholder='Add a reply...'\n          // inputProps={ariaLabel}\n          sx={{\n            color: 'white',\n            border: 'white',\n            width: '80%',\n          }}\n          type='text'\n          value={reply}\n          onChange={(e) => setReply(e.target.value)}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              handleSubmit(e);\n            }\n          }}\n        />\n        <Button variant='text'>CANCEL</Button>\n        <Button\n          variant='outlined'\n          onClick={(e) => {\n            handleSubmit(e);\n          }}\n        >\n          REPLY\n        </Button>\n        {/*<Comment videoId={params.videoId} /> */}\n      </Box>\n    <div className='replies'>\n      {replies.reverse().map((reply, index) => {\n        return (\n          reply.text\n        );\n      })}\n    </div>\n      \n    </div>\n  );\n}\n\nexport default Comment;\n",{"ruleId":"117","severity":1,"message":"118","line":15,"column":8,"nodeType":"119","messageId":"120","endLine":15,"endColumn":20},{"ruleId":"117","severity":1,"message":"121","line":12,"column":10,"nodeType":"119","messageId":"120","endLine":12,"endColumn":14},{"ruleId":"117","severity":1,"message":"122","line":13,"column":10,"nodeType":"119","messageId":"120","endLine":13,"endColumn":14},{"ruleId":"123","severity":1,"message":"124","line":19,"column":6,"nodeType":"125","endLine":19,"endColumn":21,"suggestions":"126"},{"ruleId":"123","severity":1,"message":"127","line":19,"column":6,"nodeType":"125","endLine":19,"endColumn":22,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":84,"column":31,"nodeType":"131","messageId":"132","endLine":84,"endColumn":33},{"ruleId":"117","severity":1,"message":"133","line":12,"column":8,"nodeType":"119","messageId":"120","endLine":12,"endColumn":25},{"ruleId":"134","severity":1,"message":"135","line":46,"column":11,"nodeType":"136","endLine":50,"endColumn":13},{"ruleId":"117","severity":1,"message":"137","line":9,"column":9,"nodeType":"119","messageId":"120","endLine":9,"endColumn":17},{"ruleId":"123","severity":1,"message":"138","line":19,"column":6,"nodeType":"125","endLine":19,"endColumn":20,"suggestions":"139"},{"ruleId":"117","severity":1,"message":"121","line":15,"column":10,"nodeType":"119","messageId":"120","endLine":15,"endColumn":14},{"ruleId":"123","severity":1,"message":"140","line":24,"column":6,"nodeType":"125","endLine":24,"endColumn":33,"suggestions":"141"},{"ruleId":"117","severity":1,"message":"142","line":48,"column":11,"nodeType":"119","messageId":"120","endLine":48,"endColumn":19},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"134","severity":1,"message":"135","line":17,"column":7,"nodeType":"136","endLine":21,"endColumn":8},{"ruleId":"123","severity":1,"message":"147","line":16,"column":6,"nodeType":"125","endLine":16,"endColumn":8,"suggestions":"148"},{"ruleId":"117","severity":1,"message":"121","line":18,"column":10,"nodeType":"119","messageId":"120","endLine":18,"endColumn":14},{"ruleId":"117","severity":1,"message":"149","line":19,"column":31,"nodeType":"119","messageId":"120","endLine":19,"endColumn":37},{"ruleId":"117","severity":1,"message":"150","line":19,"column":39,"nodeType":"119","messageId":"120","endLine":19,"endColumn":44},{"ruleId":"117","severity":1,"message":"151","line":19,"column":46,"nodeType":"119","messageId":"120","endLine":19,"endColumn":54},{"ruleId":"117","severity":1,"message":"142","line":45,"column":11,"nodeType":"119","messageId":"120","endLine":45,"endColumn":19},"no-unused-vars","'PrivateRoute' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'cars' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'reset'. Either include it or remove the dependency array.","ArrayExpression",["152"],"React Hook useEffect has missing dependencies: 'getRelatedVideos' and 'getVideoInfoByID'. Either include them or remove the dependency array.",["153"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'PersonOutlineIcon' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'navigate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleSearch'. Either include it or remove the dependency array.",["154"],"React Hook useEffect has a missing dependency: 'getAllComments'. Either include it or remove the dependency array.",["155"],"'response' is assigned a value but never used.","no-native-reassign",["156"],"no-negated-in-lhs",["157"],"React Hook useEffect has a missing dependency: 'getAllRelplies'. Either include it or remove the dependency array.",["158"],"'userId' is assigned a value but never used.","'likes' is assigned a value but never used.","'dislikes' is assigned a value but never used.",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},"Update the dependencies array to be: [isServerError, reset]",{"range":"169","text":"170"},"Update the dependencies array to be: [getRelatedVideos, getVideoInfoByID, params.videoId]",{"range":"171","text":"172"},"Update the dependencies array to be: [handleSearch, params.query]",{"range":"173","text":"174"},"Update the dependencies array to be: [updatePage, props.videoId, getAllComments]",{"range":"175","text":"176"},"Update the dependencies array to be: [getAllRelplies]",{"range":"177","text":"178"},[562,577],"[isServerError, reset]",[611,627],"[getRelatedVideos, getVideoInfoByID, params.videoId]",[513,527],"[handleSearch, params.query]",[744,771],"[updatePage, props.videoId, getAllComments]",[564,566],"[getAllRelplies]"]