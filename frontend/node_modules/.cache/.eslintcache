[{"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/index.js":"1","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/App.js":"2","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/context/AuthContext.js":"3","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/utils/PrivateRoute.js":"4","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/pages/HomePage/HomePage.js":"5","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/pages/LoginPage/LoginPage.js":"6","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/pages/RegisterPage/RegisterPage.js":"7","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/components/Footer/Footer.jsx":"8","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/components/NavBar/NavBar.jsx":"9","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/hooks/useCustomForm.js":"10","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/hooks/useAuth.js":"11"},{"size":385,"mtime":1649875685532,"results":"12","hashOfConfig":"13"},{"size":878,"mtime":1650056345045,"results":"14","hashOfConfig":"13"},{"size":2520,"mtime":1649875685531,"results":"15","hashOfConfig":"13"},{"size":287,"mtime":1649875685533,"results":"16","hashOfConfig":"13"},{"size":1122,"mtime":1650048864429,"results":"17","hashOfConfig":"13"},{"size":1380,"mtime":1649875685533,"results":"18","hashOfConfig":"13"},{"size":1910,"mtime":1649875685533,"results":"19","hashOfConfig":"13"},{"size":153,"mtime":1649875685531,"results":"20","hashOfConfig":"13"},{"size":1912,"mtime":1650059893884,"results":"21","hashOfConfig":"13"},{"size":662,"mtime":1649875685532,"results":"22","hashOfConfig":"13"},{"size":214,"mtime":1649875685532,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"ichdlt",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/index.js",[],[],["60","61"],"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/App.js",[],[],"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/context/AuthContext.js",[],[],"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/utils/PrivateRoute.js",[],[],"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/pages/HomePage/HomePage.js",[],[],"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/pages/LoginPage/LoginPage.js",["62"],[],"import React, { useContext, useEffect } from \"react\";\nimport AuthContext from \"../../context/AuthContext\";\nimport useCustomForm from \"../../hooks/useCustomForm\";\nimport { Link } from \"react-router-dom\";\nimport \"./LoginPage.css\";\n\nconst LoginPage = () => {\n  const { loginUser, isServerError } = useContext(AuthContext);\n  const defaultValues = { username: \"\", password: \"\" };\n  const [formData, handleInputChange, handleSubmit, reset] = useCustomForm(\n    defaultValues,\n    loginUser\n  );\n\n  useEffect(() => {\n    if (isServerError) {\n      reset();\n    }\n  }, [isServerError]);\n\n  return (\n    <div className=\"container\">\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <label>\n          Username:{\" \"}\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={formData.username}\n            onChange={handleInputChange}\n          />\n        </label>\n        <label>\n          Password:{\" \"}\n          <input\n            type=\"text\"\n            name=\"password\"\n            value={formData.password}\n            onChange={handleInputChange}\n          />\n        </label>\n        {isServerError ? (\n          <p className=\"error\">Login failed, incorrect credentials!</p>\n        ) : null}\n        <Link to=\"/register\">Click to register!</Link>\n        <button>Login!</button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/pages/RegisterPage/RegisterPage.js",[],[],"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/components/Footer/Footer.jsx",[],[],"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/components/NavBar/NavBar.jsx",["63","64"],[],"import React from 'react';\nimport { useContext } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport AuthContext from '../../context/AuthContext';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport VideoCallOutlinedIcon from '@material-ui/icons/VideoCallOutlined';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport Avatar from '@material-ui/core/Avatar';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\n\nimport './NavBar.css';\n\nconst Navbar = () => {\n  const { logoutUser, user } = useContext(AuthContext);\n  const navigate = useNavigate();\n  return (\n    <div className='navBar'>\n      <ul>\n        <li className='brand'>\n          <Link to='/' style={{ textDecoration: 'none', color: 'white' }}>\n            <MenuIcon />\n          </Link>\n          <img\n            className='logo-img'\n            src='https://upload.wikimedia.org/wikipedia/commons/a/af/Youtube.png'\n            alt='youtube image'\n          />\n        </li>\n\n        <li className=\"center-nav-cluster\">\n          <input type='text' className='search-field'/>\n          <SearchIcon style = {{ color : \"white\"}} className='search-button'/>\n        </li>\n\n        <li></li>\n        <li className='right-nav-cluster'>\n          {user ? (\n            <div>\n              <VideoCallOutlinedIcon /> <AppsIcon /> <NotificationsIcon />{' '}\n            </div>\n          ) : (\n            <div>\n              {' '}\n              <AppsIcon /> <MoreVertIcon />\n            </div>\n          )}\n\n          {user ? (\n            <Avatar onClick={logoutUser} />\n          ) : (\n            <button onClick={() => navigate('/login')}>Sign In</button>\n          )}\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Navbar;\n","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/hooks/useCustomForm.js",[],[],"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/hooks/useAuth.js",[],[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":19,"column":6,"nodeType":"71","endLine":19,"endColumn":21,"suggestions":"72"},{"ruleId":"73","severity":1,"message":"74","line":12,"column":8,"nodeType":"75","messageId":"76","endLine":12,"endColumn":25},{"ruleId":"77","severity":1,"message":"78","line":26,"column":11,"nodeType":"79","endLine":30,"endColumn":13},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'reset'. Either include it or remove the dependency array.","ArrayExpression",["82"],"no-unused-vars","'PersonOutlineIcon' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [isServerError, reset]",{"range":"85","text":"86"},[562,577],"[isServerError, reset]"]