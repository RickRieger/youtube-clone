[{"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/index.js":"1","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/context/AuthContext.js":"2","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/App.js":"3","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/utils/PrivateRoute.js":"4","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/pages/LoginPage/LoginPage.js":"5","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/pages/RegisterPage/RegisterPage.js":"6","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/pages/HomePage/HomePage.js":"7","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/components/NavBar/NavBar.jsx":"8","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/components/Footer/Footer.jsx":"9","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/hooks/useAuth.js":"10","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/hooks/useCustomForm.js":"11","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/components/Sidebar/Sidebar.jsx":"12","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/components/Sidebar/SideBarRow.jsx":"13","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/components/Video/Video.jsx":"14","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/pages/SelectedVideo/SelectedVideo.jsx":"15","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/pages/SuggestedVideos/SuggestedVideos.jsx":"16"},{"size":385,"mtime":1649875685532,"results":"17","hashOfConfig":"18"},{"size":2520,"mtime":1649875685531,"results":"19","hashOfConfig":"18"},{"size":1081,"mtime":1650382902627,"results":"20","hashOfConfig":"18"},{"size":287,"mtime":1649875685533,"results":"21","hashOfConfig":"18"},{"size":1380,"mtime":1649875685533,"results":"22","hashOfConfig":"18"},{"size":1910,"mtime":1649875685533,"results":"23","hashOfConfig":"18"},{"size":1400,"mtime":1650383322676,"results":"24","hashOfConfig":"18"},{"size":2695,"mtime":1650383092412,"results":"25","hashOfConfig":"18"},{"size":164,"mtime":1650307608237,"results":"26","hashOfConfig":"18"},{"size":214,"mtime":1649875685532,"results":"27","hashOfConfig":"18"},{"size":662,"mtime":1649875685532,"results":"28","hashOfConfig":"18"},{"size":1319,"mtime":1650131119769,"results":"29","hashOfConfig":"18"},{"size":323,"mtime":1650129689127,"results":"30","hashOfConfig":"18"},{"size":884,"mtime":1650373753243,"results":"31","hashOfConfig":"18"},{"size":2107,"mtime":1650377108903,"results":"32","hashOfConfig":"18"},{"size":2044,"mtime":1650383668800,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"ichdlt",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"37"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"37"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"37"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/index.js",[],[],["90","91"],"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/context/AuthContext.js",[],[],"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/App.js",["92"],[],"// General Imports\nimport { Routes, Route } from 'react-router-dom';\nimport './App.css';\n\n// Pages Imports\nimport HomePage from './pages/HomePage/HomePage';\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport RegisterPage from './pages/RegisterPage/RegisterPage';\n// Component Imports\nimport Navbar from './components/NavBar/NavBar';\nimport Footer from './components/Footer/Footer';\nimport SelectedVideo from './pages/SelectedVideo/SelectedVideo';\n\n// Util Imports\nimport PrivateRoute from './utils/PrivateRoute';\n\nfunction App() {\n  return (\n    <div>\n      <Navbar />\n      <Routes>\n        <Route\n          path='/'\n          element={\n            //  <PrivateRoute>\n            <HomePage />\n            // </PrivateRoute>\n          }\n        />\n        <Route path='/register' element={<RegisterPage />} />\n        <Route path='/login' element={<LoginPage />} />\n        <Route path='/selected-video/:videoId' element={<SelectedVideo />} />\n        <Route path='/:query' element={<HomePage />} />\n      </Routes>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/utils/PrivateRoute.js",[],[],"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/pages/LoginPage/LoginPage.js",["93"],[],"import React, { useContext, useEffect } from \"react\";\nimport AuthContext from \"../../context/AuthContext\";\nimport useCustomForm from \"../../hooks/useCustomForm\";\nimport { Link } from \"react-router-dom\";\nimport \"./LoginPage.css\";\n\nconst LoginPage = () => {\n  const { loginUser, isServerError } = useContext(AuthContext);\n  const defaultValues = { username: \"\", password: \"\" };\n  const [formData, handleInputChange, handleSubmit, reset] = useCustomForm(\n    defaultValues,\n    loginUser\n  );\n\n  useEffect(() => {\n    if (isServerError) {\n      reset();\n    }\n  }, [isServerError]);\n\n  return (\n    <div className=\"container\">\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <label>\n          Username:{\" \"}\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={formData.username}\n            onChange={handleInputChange}\n          />\n        </label>\n        <label>\n          Password:{\" \"}\n          <input\n            type=\"text\"\n            name=\"password\"\n            value={formData.password}\n            onChange={handleInputChange}\n          />\n        </label>\n        {isServerError ? (\n          <p className=\"error\">Login failed, incorrect credentials!</p>\n        ) : null}\n        <Link to=\"/register\">Click to register!</Link>\n        <button>Login!</button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/pages/RegisterPage/RegisterPage.js",[],[],"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/pages/HomePage/HomePage.js",["94","95"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport Sidebar from '../../components/Sidebar/Sidebar';\nimport SuggestedVideos from '../SuggestedVideos/SuggestedVideos';\nimport axios from 'axios';\nimport useAuth from '../../hooks/useAuth';\nimport './Home.css';\n\nconst HomePage = () => {\n  // The \"user\" value from this Hook contains the decoded logged in user information (username, first name, id)\n  // The \"token\" value is the JWT token that you will send in the header of any request requiring authentication\n  const [user, token] = useAuth();\n  const [cars, setCars] = useState([]);\n\n  useEffect(() => {\n    const fetchCars = async () => {\n      try {\n        let response = await axios.get('http://127.0.0.1:8000/api/cars/', {\n          headers: {\n            Authorization: 'Bearer ' + token,\n          },\n        });\n        setCars(response.data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchCars();\n  }, [token]);\n  return (\n    <div className='container'>\n      {/* <h1 style={{color:'white'}}>Home Page for {user.username}!</h1> */}\n      <div className='app__page'>\n        <Sidebar />\n        <SuggestedVideos />\n      </div>\n\n      {/* {cars &&\n        cars.map((car) => (\n          <p key={car.id}>\n            {car.year} {car.model} {car.make}\n          </p>\n        ))} */}\n    </div>\n  );\n};\n\nexport default HomePage;\n","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/components/NavBar/NavBar.jsx",["96","97"],[],"import React from 'react';\nimport { useContext, useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport AuthContext from '../../context/AuthContext';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport VideoCallOutlinedIcon from '@material-ui/icons/VideoCallOutlined';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport Avatar from '@material-ui/core/Avatar';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\n\nimport './NavBar.css';\n\nconst Navbar = () => {\n  const { logoutUser, user } = useContext(AuthContext);\n  const [query, setQuery] = useState('');\n\n  const navigate = useNavigate();\n\n  const handleSearchQuery = () => {\n    if (query.length === 0) {\n      alert('please enter a proper search query!');\n      return;\n    }\n    navigate(`/${query}`);\n    setQuery('');\n  };\n\n  const handleOnChange = (e) => {\n    console.log(e.target.value);\n    setQuery(e.target.value);\n    if (e.key === 'Enter') {\n      handleSearchQuery();\n    }\n  };\n\n  return (\n    <div className='navBar'>\n      <ul>\n        <li className='brand'>\n          <Link to='/' style={{ textDecoration: 'none', color: 'white' }}>\n            <MenuIcon />\n          </Link>\n          <img\n            className='logo-img'\n            src='https://upload.wikimedia.org/wikipedia/commons/a/af/Youtube.png'\n            alt='youtube image'\n          />\n        </li>\n\n        <li className='center-nav-cluster'>\n          <input\n            type='text'\n            value={query}\n            className='search-field'\n            placeholder='Search'\n            onChange={(e) => handleOnChange(e)}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                handleSearchQuery();\n              }\n            }}\n          />\n          <SearchIcon className='search-button' onClick={handleSearchQuery} />\n        </li>\n        <li className='right-nav-cluster'>\n          {user ? (\n            <div>\n              <VideoCallOutlinedIcon className='header_icons' />{' '}\n              <AppsIcon className='header_icons' />{' '}\n              <NotificationsIcon className='header_icons' />{' '}\n            </div>\n          ) : (\n            <div>\n              {' '}\n              <AppsIcon /> <MoreVertIcon />\n            </div>\n          )}\n\n          {user ? (\n            <Avatar onClick={logoutUser} />\n          ) : (\n            <button onClick={() => navigate('/login')}>Sign In</button>\n          )}\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Navbar;\n","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/components/Footer/Footer.jsx",[],[],"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/hooks/useAuth.js",[],[],"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/hooks/useCustomForm.js",[],[],"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/components/Sidebar/Sidebar.jsx",[],[],"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/components/Sidebar/SideBarRow.jsx",[],[],"/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/components/Video/Video.jsx",["98"],[],"import React from 'react';\nimport moment from 'moment';\nimport './Video.css';\nimport { useNavigate } from 'react-router-dom';\n\nconst Video = (props) => {\n  const navigate = useNavigate();\n  const handleOnClick = (videoId) => {\n    navigate(`/selected-video/${videoId}`);\n  };\n\n  return (\n    <div\n      className='videoContainer'\n      onClick={() => handleOnClick(props.video_id)}\n    >\n      <img className='videoThumbnail' src={props.image}></img>\n      <div className='videoContainerInfo'>\n        <div className='videoContainerText'>\n          <p className='videoTitleText'>{props.title}</p>\n          <p className='videoViewsText'>\n            {' '}\n            {props.channel}\n            <br></br> views: {props.views} ·{' '}\n            {moment(props.uploadDate).startOf('day').fromNow()}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Video;\n","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/pages/SelectedVideo/SelectedVideo.jsx",["99"],[],"import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './SelectedVideo.css';\nfunction SelectedVideo() {\n  const params = useParams();\n  const [videoInfo, setVideoInfo] = useState(null);\n  const [relatedVideos, setRelatedVideos] = useState(null);\n\n  useEffect(() => {\n    getVideoInfoByID();\n    getRelatedVideos();\n  }, []);\n\n  const getRelatedVideos = async () => {\n    try {\n      let result = await axios.get(\n        `https://youtube.googleapis.com/youtube/v3/search?part=snippet&relatedToVideoId=${params.videoId}&type=video&key=${process.env.REACT_APP_API_KEY}`\n      );\n      setRelatedVideos(result.data.items);\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n\n  const getVideoInfoByID = async () => {\n    try {\n      let result = await axios.get(\n        `https://youtube.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&id=${params.videoId}&key=${process.env.REACT_APP_API_KEY}`\n      );\n\n      setVideoInfo(result.data.items[0]);\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n\n  console.log(videoInfo);\n  console.log(relatedVideos);\n  if (!videoInfo && !relatedVideos) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <>\n        <div className='video-responsive'>\n          <iframe\n            src={`https://www.youtube.com/embed/${params.videoId}`}\n            frameBorder='0'\n            allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture'\n            allowFullScreen\n            title='Embedded youtube'\n          />\n        </div>\n        <div className='bottom-container'>\n          <div className='comment-section'>\n            <div className='comment-row-one'>{videoInfo.snippet.title}</div>\n            <div className='comment-row-two'>\n              {videoInfo.statistics.viewCount} views .{' '}\n              {videoInfo.snippet.publishedAt}\n            </div>\n          </div>\n          <div className='related-videos'></div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default SelectedVideo;\n","/Users/richardrieger/Documents/devCodeCamp/week8/youtube-clone/frontend/src/pages/SuggestedVideos/SuggestedVideos.jsx",["100","101"],[],"import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './SuggestedVideos.css';\nimport Video from '../../components/Video/Video';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nfunction SuggestedVideos() {\n  const navigate = useNavigate();\n  const params = useParams();\n  const [videos, setVideos] = useState([]);\n\n  useEffect(() => {\n    if (params.query) {\n      handleSearch();\n    } else {\n      getAllPopularVideos();\n    }\n  }, [params.query]);\n\n  console.log(process.env.REACT_APP_API_KEY);\n\n  const getAllPopularVideos = async () => {\n    try {\n      let result = await axios.get(\n        `https://youtube.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&chart=mostPopular&maxResults=20&regionCode=US&key=${process.env.REACT_APP_API_KEY}`\n      );\n\n      setVideos(result.data.items);\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n\n  const handleSearch = async () => {\n    try {\n      let result = await axios.get(\n        `https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=25&q=${params.query}&key=${process.env.REACT_APP_API_KEY}`\n      );\n\n      setVideos(result.data.items);\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n  console.log(videos);\n  if (!videos) {\n    return <div>'loading...'</div>;\n  } else {\n    return (\n      <div className='suggested__videos'>\n        <div className='suggestedVideos_videos'>\n          {videos.map((video, index) => {\n            return (\n              <Video\n                key={index}\n                image={video.snippet.thumbnails.high.url}\n                title={video.snippet.title}\n                channel={video.snippet.channelTitle}\n                // views={video.statistics.viewCount}\n                video_id={video.id}\n                uploadDate={video.snippet.publishedAt}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SuggestedVideos;\n// video.snippet.thumbnails.high\n",{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":15,"column":8,"nodeType":"108","messageId":"109","endLine":15,"endColumn":20},{"ruleId":"110","severity":1,"message":"111","line":19,"column":6,"nodeType":"112","endLine":19,"endColumn":21,"suggestions":"113"},{"ruleId":"106","severity":1,"message":"114","line":12,"column":10,"nodeType":"108","messageId":"109","endLine":12,"endColumn":14},{"ruleId":"106","severity":1,"message":"115","line":13,"column":10,"nodeType":"108","messageId":"109","endLine":13,"endColumn":14},{"ruleId":"106","severity":1,"message":"116","line":12,"column":8,"nodeType":"108","messageId":"109","endLine":12,"endColumn":25},{"ruleId":"117","severity":1,"message":"118","line":46,"column":11,"nodeType":"119","endLine":50,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":17,"column":7,"nodeType":"119","endLine":17,"endColumn":57},{"ruleId":"110","severity":1,"message":"122","line":13,"column":6,"nodeType":"112","endLine":13,"endColumn":8,"suggestions":"123"},{"ruleId":"106","severity":1,"message":"124","line":9,"column":9,"nodeType":"108","messageId":"109","endLine":9,"endColumn":17},{"ruleId":"110","severity":1,"message":"125","line":19,"column":6,"nodeType":"112","endLine":19,"endColumn":20,"suggestions":"126"},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'PrivateRoute' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'reset'. Either include it or remove the dependency array.","ArrayExpression",["129"],"'user' is assigned a value but never used.","'cars' is assigned a value but never used.","'PersonOutlineIcon' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'getRelatedVideos' and 'getVideoInfoByID'. Either include them or remove the dependency array.",["130"],"'navigate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleSearch'. Either include it or remove the dependency array.",["131"],"no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},"Update the dependencies array to be: [isServerError, reset]",{"range":"138","text":"139"},"Update the dependencies array to be: [getRelatedVideos, getVideoInfoByID]",{"range":"140","text":"141"},"Update the dependencies array to be: [handleSearch, params.query]",{"range":"142","text":"143"},[562,577],"[isServerError, reset]",[398,400],"[getRelatedVideos, getVideoInfoByID]",[513,527],"[handleSearch, params.query]"]